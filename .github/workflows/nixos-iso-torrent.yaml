name: NixOS ISO torrent creator
on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  
env:
  nixos_version: 21.11
  
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Get NixOS info
        id: nixos-info
        run: |
          url=$(curl -sLI -o /dev/null -w %{url_effective} https://channels.nixos.org/nixos-$nixos_version)
          info=$(basename $url)
          echo ::set-output name=info::$info
          echo ::set-output name=latest-version::${info#nixos-}
          echo ::set-output name=current-version::$(curl -s $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/latest | jq -r .tag_name)
          
      - name: Check if there is newer version
        run: '[ v${{ steps.nixos-info.outputs.latest-version }} != ${{ steps.nixos-info.outputs.current-version }} ]'
        
    outputs:
      info: ${{ steps.nixos-info.outputs.info }}
      latest-version: ${{ steps.nixos-info.outputs.latest-version }}
      
  torrent:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: [plasma5, gnome, minimal]
        
    steps:
      - name: Get NixOS ISO latest URL and file name
        id: nixos-iso
        run: |
          latest_url=$(curl -sLI -o /dev/null -w %{url_effective} https://channels.nixos.org/nixos-$nixos_version/latest-nixos-${{ matrix.flavor }}-x86_64-linux.iso)
          echo ::set-output name=latest-url::$latest_url
          echo ::set-output name=filename::$(basename $latest_url)
          
      - name: Install torrenttools
        run: |
          sudo add-apt-repository ppa:fbdtemme/torrenttools
          sudo apt-get update
          sudo apt-get install torrenttools
          
      - name: Download NixOS ISO
        run: aria2c -x 16 "${{ steps.nixos-iso.outputs.latest-url }}"
        
      - name: Create NixOS ISO torrent
        run: torrenttools create -o "${{ steps.nixos-iso.outputs.filename }}.torrent" -w "${{ steps.nixos-iso.outputs.latest-url }}" -c "$(basename ${{ steps.nixos-iso.outputs.filename }} .iso) torrent by AnimMouse" -s nixos-iso-torrents "${{ steps.nixos-iso.outputs.filename }}"
        
      - name: Upload NixOS ISO torrent
        uses: actions/upload-artifact@v3
        with:
          name: NixOS ${{ matrix.flavor }} ISO
          path: ${{ steps.nixos-iso.outputs.filename }}.torrent
          
  release:
    needs: [check, torrent]
    runs-on: ubuntu-latest
    steps:
      - name: Download NixOS plasma5 ISO
        uses: actions/download-artifact@v3
        with:
          name: NixOS plasma5 ISO
          
      - name: Download NixOS gnome ISO
        uses: actions/download-artifact@v3
        with:
          name: NixOS gnome ISO
          
      - name: Download NixOS minimal ISO
        uses: actions/download-artifact@v3
        with:
          name: NixOS minimal ISO
          
      - name: Get NixOS ISO file name
        id: nixos-iso-filename
        run: |
          plasma5=$(curl -sLI -o /dev/null -w %{url_effective} https://channels.nixos.org/nixos-$nixos_version/latest-nixos-plasma5-x86_64-linux.iso)
          gnome=$(curl -sLI -o /dev/null -w %{url_effective} https://channels.nixos.org/nixos-$nixos_version/latest-nixos-gnome-x86_64-linux.iso)
          minimal=$(curl -sLI -o /dev/null -w %{url_effective} https://channels.nixos.org/nixos-$nixos_version/latest-nixos-minimal-x86_64-linux.iso)
          echo ::set-output name=plasma5::$(basename $plasma5)
          echo ::set-output name=gnome::$(basename $gnome)
          echo ::set-output name=minimal::$(basename $minimal)
          
      - name: Release NixOS ISO torrent
        uses: softprops/action-gh-release@v1
        with:
          name: NixOS ${{ needs.check.outputs.latest-version }}
          tag_name: v${{ needs.check.outputs.latest-version }}
          body: |
            ${{ needs.check.outputs.info }}
          files: |
            ${{ steps.nixos-iso-filename.outputs.plasma5 }}.torrent
            ${{ steps.nixos-iso-filename.outputs.gnome }}.torrent
            ${{ steps.nixos-iso-filename.outputs.minimal }}.torrent