name: NixOS small ISO torrent creator
on:
  schedule:
    - cron: '7 11 * * 0'
  workflow_dispatch:
  watch:
    types: [started]
    
concurrency:
  group: ${{ github.workflow }}
  
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Get NixOS small version, and latest commit
        id: nixos-info
        run: |
          version=$(curl -s https://cdn.jsdelivr.net/gh/NixOS/nixos-homepage/flake.lock | jq -r '.nodes."released-nixpkgs-stable".original.ref')
          url=$(curl -sLI -o /dev/null -w %{url_effective} https://channels.nixos.org/$version-small)
          version_git_sha=$(basename $url)
          echo version=${version#nixos-} >> $GITHUB_OUTPUT
          echo version-git-sha=${version_git_sha#nixos-} >> $GITHUB_OUTPUT
          
      - name: Get NixOS small current commit
        id: nixos-current
        run: echo version-git-sha=$(gh api repos/$GITHUB_REPOSITORY/releases -q 'map(select(.prerelease)) | .[0].tag_name') >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Check if there is newer commit
        run: '[[ "v${{ steps.nixos-info.outputs.version-git-sha }}-small" != "${{ steps.nixos-current.outputs.version-git-sha }}" ]]'
        
    outputs:
      version: ${{ steps.nixos-info.outputs.version }}
      version-git-sha: ${{ steps.nixos-info.outputs.version-git-sha }}
      
  torrent:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x86_64, aarch64]
        
    steps:
      - name: Get NixOS small ISO URL and file name
        id: nixos-iso
        run: |
          echo url=https://releases.nixos.org/nixos/${{ needs.check.outputs.version }}-small/nixos-${{ needs.check.outputs.version-git-sha }} >> $GITHUB_OUTPUT
          echo filename=nixos-minimal-${{ needs.check.outputs.version-git-sha }}-${{ matrix.architecture }}-linux.iso >> $GITHUB_OUTPUT
          
      - name: Setup torrenttools
        uses: AnimMouse/setup-appimage@v1
        with:
          name: torrenttools
          url: https://github.com/fbdtemme/torrenttools/releases/download/v0.6.2/torrenttools-0.6.2-linux-x86_64.AppImage
          
      - name: Download NixOS ISO
        run: aria2c -x 16 "${{ steps.nixos-iso.outputs.url }}/${{ steps.nixos-iso.outputs.filename }}"
        
      - name: Create NixOS ISO torrent
        run: torrenttools create -o "${{ steps.nixos-iso.outputs.filename }}.torrent" -w "${{ steps.nixos-iso.outputs.url }}/${{ steps.nixos-iso.outputs.filename }}" -c "NixOS small minimal ${{ needs.check.outputs.version-git-sha }} ${{ matrix.architecture }} torrent by Anim Mouse" -s nixos-iso-torrents "${{ steps.nixos-iso.outputs.filename }}"
        
      - name: Upload NixOS ISO torrent
        uses: actions/upload-artifact@v4
        with:
          name: NixOS small minimal ${{ matrix.architecture }}
          path: ${{ steps.nixos-iso.outputs.filename }}.torrent
          retention-days: 1
          compression-level: 0
          
  release:
    needs: [check, torrent]
    runs-on: ubuntu-latest
    steps:
      - name: Download NixOS ISO torrents
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          
      - name: Release NixOS ISO torrents
        run: >
          gh release create "v${{ needs.check.outputs.version-git-sha }}-small"
          "nixos-minimal-${{ needs.check.outputs.version-git-sha }}-x86_64-linux.iso.torrent"
          "nixos-minimal-${{ needs.check.outputs.version-git-sha }}-aarch64-linux.iso.torrent"
          -n "NixOS small ${{ needs.check.outputs.version-git-sha }} torrents" -p -t "NixOS small ${{ needs.check.outputs.version-git-sha }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}